==151838== Memcheck, a memory error detector
==151838== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==151838== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==151838== Command: ./poke327
==151838== Parent PID: 151816
==151838== 
==151838== Conditional jump or move depends on uninitialised value(s)
==151838==    at 0x408FD3: addRoadSystem(mapTile*) (mapGeneration.cpp:608)
==151838==    by 0x40996C: createMapTileIndependent() (mapGeneration.cpp:810)
==151838==    by 0x402534: main (poke327.cpp:32)
==151838== 
==151838== Conditional jump or move depends on uninitialised value(s)
==151838==    at 0x408FD9: addRoadSystem(mapTile*) (mapGeneration.cpp:608)
==151838==    by 0x40996C: createMapTileIndependent() (mapGeneration.cpp:810)
==151838==    by 0x402534: main (poke327.cpp:32)
==151838== 
==151838== Invalid read of size 8
==151838==    at 0x406CA4: moveGameChar(GameCharacter*, int, GameCharacter*, mapTile*) (NPCMovement.cpp:815)
==151838==    by 0x402739: main (poke327.cpp:62)
==151838==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==151838== 
==151838== 
==151838== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==151838==  Access not within mapped region at address 0x0
==151838==    at 0x406CA4: moveGameChar(GameCharacter*, int, GameCharacter*, mapTile*) (NPCMovement.cpp:815)
==151838==    by 0x402739: main (poke327.cpp:62)
==151838==  If you believe this happened as a result of a stack
==151838==  overflow in your program's main thread (unlikely but
==151838==  possible), you can try to increase the size of the
==151838==  main thread stack using the --main-stacksize= flag.
==151838==  The main thread stack size used in this run was 8388608.
==151838== 
==151838== HEAP SUMMARY:
==151838==     in use at exit: 146,682 bytes in 378 blocks
==151838==   total heap usage: 9,871 allocs, 9,493 frees, 515,251 bytes allocated
==151838== 
==151838== LEAK SUMMARY:
==151838==    definitely lost: 0 bytes in 0 blocks
==151838==    indirectly lost: 0 bytes in 0 blocks
==151838==      possibly lost: 201 bytes in 3 blocks
==151838==    still reachable: 146,481 bytes in 375 blocks
==151838==         suppressed: 0 bytes in 0 blocks
==151838== Rerun with --leak-check=full to see details of leaked memory
==151838== 
==151838== Use --track-origins=yes to see where uninitialised values come from
==151838== For lists of detected and suppressed errors, rerun with: -s
==151838== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
